<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yunzhong.NewsCollector.service.dao.NewsMapper">
    <resultMap id="BaseResultMap" type="org.yunzhong.NewsCollector.entity.News">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="category" jdbcType="VARCHAR" property="category" />
        <result column="owner" jdbcType="VARCHAR" property="owner" />
        <result column="create_time" jdbcType="TIMESTAMP"
            property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP"
            property="updateTime" />
        <result column="publish_time" jdbcType="TIMESTAMP"
            property="publishTime" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
        type="org.yunzhong.NewsCollector.entity.News">
        <result column="icon" jdbcType="LONGVARBINARY" property="icon" />
    </resultMap>
    <sql id="Base_Column_List">
        id, url, title, category, owner, create_time,
        update_time, publish_time
    </sql>
    <sql id="Blob_Column_List">
        icon
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long"
        resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from news
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="listNews" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from news
        where owner = #{owner} and category = #{category}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from
        news
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="org.yunzhong.NewsCollector.entity.News">
        insert into news (id, url,
        title,
        category, owner, create_time,
        update_time, publish_time,
        icon
        )
        values (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{category,jdbcType=VARCHAR},
        #{owner,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP},
        #{publishTime,jdbcType=TIMESTAMP},
        #{icon,jdbcType=LONGVARBINARY}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.yunzhong.NewsCollector.entity.News">
        insert into news
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="owner != null">
                owner,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="publishTime != null">
                publish_time,
            </if>
            <if test="icon != null">
                icon,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="owner != null">
                #{owner,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishTime != null">
                #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.yunzhong.NewsCollector.entity.News">
        update news
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="owner != null">
                owner = #{owner,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishTime != null">
                publish_time =
                #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.yunzhong.NewsCollector.entity.News">
        update news
        set url = #{url,jdbcType=VARCHAR},
        title =
        #{title,jdbcType=VARCHAR},
        category =
        #{category,jdbcType=VARCHAR},
        owner = #{owner,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time =
        #{updateTime,jdbcType=TIMESTAMP},
        publish_time =
        #{publishTime,jdbcType=TIMESTAMP},
        icon =
        #{icon,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.yunzhong.NewsCollector.entity.News">
        update news
        set
        url = #{url,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        category = #{category,jdbcType=VARCHAR},
        owner =
        #{owner,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP},
        update_time =
        #{updateTime,jdbcType=TIMESTAMP},
        publish_time =
        #{publishTime,jdbcType=TIMESTAMP}
        where id =
        #{id,jdbcType=BIGINT}
    </update>
</mapper>